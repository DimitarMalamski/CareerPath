services:
  # --- DEV DATABASE ---
  db-dev:
    image: postgres:15.0
    networks:
      - cp-net
    container_name: cp-db-dev
    environment:
      POSTGRES_DB: careerpath_dev
      POSTGRES_USER: cp_user
      POSTGRES_PASSWORD: cp_pass
    ports:
      - "5432:5432"
    volumes:
      - cp_pg_dev:/var/lib/postgresql/data
    restart: unless-stopped

  # --- PROD DATABASE
  db-prod:
    image: postgres:15.0
    container_name: cp-db-prod
    networks:
      - cp-net
    environment:
      POSTGRES_DB: careerpath_prod
      POSTGRES_USER: cp_user
      POSTGRES_PASSWORD: cp_pass
    ports:
      - "5433:5432"
    volumes:
      - cp_pg_prod:/var/lib/postgresql/data
    restart: unless-stopped

  # --- PGADMIN ---
  pgadmin:
    image: dpage/pgadmin4
    networks:
      - cp-net
    container_name: cp-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    restart: unless-stopped

  # --- BACKEND ---
  backend:
    build:
      context: ../../backend
    networks:
      - cp-net
    container_name: cp-backend
    ports:
      - "8080:8080"
    env_file:
      - ../env/.env.${ENV:-dev}
    depends_on:
      - pgadmin

  # --- FRONTEND ---
  frontend:
    build:
      context: ../../frontend
    networks:
      - cp-net
    container_name: cp-frontend
    ports:
      - "4200:80"
    depends_on:
      - backend

  # --- SONARQUBE DATABASE ---
  sonarqube-db:
    image: postgres:16
    networks:
      - cp-net
    container_name: cp-sonar-db
    environment:
      POSTGRES_DB: sonar
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - sonar_db:/var/lib/postgresql/data
    restart: unless-stopped

  # --- SONARQUBE ---
  sonarqube:
    image: sonarqube:10.4.1-community
    container_name: cp-sonarqube
    networks:
      - cp-net
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://cp-sonar-db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
    depends_on:
      - sonarqube-db

networks:
  cp-net:
    driver: bridge

volumes:
  cp_pg_dev:
  cp_pg_prod:
  sonar_db:
  sonarqube_data:
  sonarqube_extensions:
