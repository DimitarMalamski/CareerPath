stages:
  - lint
  - build
  - test
  - analyze
  - report

#frontend linting ( runs code checks that ensure style, syntax and structure consistency )
# if this stage fails, the whole pipeline stops, so saves resources
frontend-lint:
  stage: lint
  image: node:20 #tells the container which image to use for this job
  variables:
    NPM_CONFIG_CACHE: "$CI_PROJECT_DIR/frontend/.npm"
  cache: #stores all the downloaded dependencies, so in future build it can be reused
    key: ${CI_COMMIT_REF_SLUG} #we keep different caches for each branch. The cache is stored on the runners host, which is outside the job's docker container
    paths:
      - frontend/.npm/
      - frontend/node_modules/
  before_script:
    - cd frontend
    - npm ci --prefer-offline --cache .npm --no-audit #installs all the dependencies from package.json ( wipes all the existing node modules and starts fresh)
  script:
    - npx ng lint #runs the linting
  rules:
    - changes:
        - frontend/**/*
    - when: never
  allow_failure: false